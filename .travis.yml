language: cpp
compiler: gcc

git:
  depth: 15

jobs:
  include:

#https://docs.travis-ci.com/user/build-stages/
#https://docs.travis-ci.com/user/conditional-builds-stages-jobs/
  - stage: Access Control / Background Check ...
    #more emoji ideas: 

    name: Bouncer: "Can I See Your ID?" (Relevant files changed, or skip CI?)
    if: tag IS NOT present
    os: linux
    group: stable
    script: bash ./.ci/travis-bouncer.sh


  - stage: Static Code Analysis / Documentation 🕵️
    #more emoji ideas: 👮 👨‍⚖️  // 🔍 / 🖊️✏️🖋️🖉 / 📝📋📃📑📄📖

    name: 🔍 Source Code Style & Error Checking (Lint)
    if: tag IS NOT present
    os: linux
    group: stable
    script: bash ./.ci/travis-lint.sh
    
  - name: 📖 Changelog updated?
    if: tag IS NOT present
    os: linux
    group: stable
    script: bash ./.ci/travis-changelog.sh

 
#TODO: set lint job (only one in this stage) to allowed-to-fail (but without fast finish)
#https://docs.travis-ci.com/user/customizing-the-build/#rows-that-are-allowed-to-fail
#https://docs.travis-ci.com/user/customizing-the-build/#fast-finishing
#https://github.com/travis-ci/travis-ci/issues/8998#issuecomment-354833771 
 
  - stage: Compile / Build 👷
    #more emoji ideas: 👨‍🔧 // ⚙️🔧 / 🏗️  (different ones for debug/release?)

  #Ubuntu Bionic (on Docker)
    name: 🏗️ Ubuntu Bionic / 18.04 LTS (Debug) [via Docker]
    if: tag IS NOT present
    os: linux
    group: stable
    services: docker
    env: NAME=UbuntuBionic
    cache:
      directories:
      - $HOME/$NAME/
    before_install: docker build -t "cockatrice_${NAME,,}" .ci/$NAME && mkdir -p $HOME/$NAME/.ccache
    script: docker run --mount "type=bind,source=$(pwd),target=/src" -w="/src"
          --mount "type=bind,source=$HOME/$NAME/.ccache,target=/.ccache" -e "CCACHE_DIR=/.ccache"
          "cockatrice_${NAME,,}"
          bash .ci/travis-compile.sh --server --install --debug

  #better add "- stage" to all? or some other comment formatting?
  #stage ordering with as in https://docs.travis-ci.com/user/build-stages/#specifying-stage-order-and-conditions?
  - name: 🏗️ Ubuntu Bionic / 18.04 LTS (Release) [via Docker]
    if: (branch = master AND NOT type = pull_request) OR tag IS present
    os: linux
    group: stable
    services: docker
    env: NAME=UbuntuBionic
    cache:
      directories:
      - $HOME/$NAME/
    before_install: docker build -t "cockatrice_${NAME,,}" .ci/$NAME && mkdir -p $HOME/$NAME/.ccache
    script: docker run --mount "type=bind,source=$(pwd),target=/src" -w="/src"
          --mount "type=bind,source=$HOME/$NAME/.ccache,target=/.ccache" -e "CCACHE_DIR=/.ccache"
          "cockatrice_${NAME,,}"
          bash .ci/travis-compile.sh --server --package "$NAME" --release


  #Ubuntu Bionic (on native Travis image)
   #Doenst work yet for some reason and always uses same config used for bionic docker biuld on default 14.04 image,
   #therefore I tried to double some entries here again. The initial template was the normal, old 14.04 build
  - name: 🏗️ Ubuntu Bionic / 18.04 LTS (Debug) [native Travis]
    if: tag IS NOT present
    os: linux
    dist: bionic
    group: stable
    cache: ccache
    services: none
    addons:
      apt:
        packages:
        - liblzma-dev
        - libprotobuf-dev
        - libqt5multimedia5-plugins
        - libqt5svg5-dev
        - libqt5sql5-mysql
        - libqt5websockets5-dev
        - protobuf-compiler
        - qt5-default
        - qtmultimedia5-dev
        - qttools5-dev
        - qttools5-dev-tools
    before_install: skip
    script: bash ./.ci/travis-compile.sh --server --install --debug

  - name: 🏗️ Ubuntu Bionic / 18.04 LTS (Release) [native Travis]
    if: (branch = master AND NOT type = pull_request) OR tag IS present
    os: linux
    dist: bionic
    group: stable
    cache: ccache
    services: none
    addons:
      apt:
        packages:
        - liblzma-dev
        - libprotobuf-dev
        - libqt5multimedia5-plugins
        - libqt5svg5-dev
        - libqt5sql5-mysql
        - libqt5websockets5-dev
        - protobuf-compiler
        - qt5-default
        - qtmultimedia5-dev
        - qttools5-dev
        - qttools5-dev-tools
    before_install: skip
    script: bash ./.ci/travis-compile.sh --server --package "$NAME" --release


  #macOS 10.13
  - name: 🏗️ macOS High Sierra / 10.13 (Debug)
    if: tag IS NOT present
    os: osx
    osx_image: xcode10.1
    cache:
      ccache: true
      directories:
      - $HOME/Library/Caches/Homebrew
    addons:
      homebrew:
        packages:
        - ccache
        - protobuf
        - qt
        - xz
        update: true
    script: bash ./.ci/travis-compile.sh --server --install --debug
    before_cache:
    - brew cleanup

  - name: 🏗️ macOS High Sierra / 10.13 (Release)
    if: (branch = master AND NOT type = pull_request) OR tag IS present
    os: osx
    osx_image: xcode10.1
    env: NAME=Sierra
    cache:
      ccache: true
      directories:
      - $HOME/Library/Caches/Homebrew
    addons:
      homebrew:
        packages:
        - ccache
        - protobuf
        - qt
        - xz
        update: true
    script: bash ./.ci/travis-compile.sh --server --package "$NAME" --release
    before_cache:
    - brew cleanup

  #macOS 10.14
  - name: 🏗️ macOS Mojave / 10.14 (Debug)
    if: tag IS NOT present
    os: osx
    osx_image: xcode11
    cache:
      ccache: true
      directories:
      - $HOME/Library/Caches/Homebrew
    addons:
      homebrew:
        packages:
        - ccache
        - protobuf
        - qt
        - xz
        update: true
    script: bash ./.ci/travis-compile.sh --server --install --debug
    before_cache:
    - brew cleanup

  - name: 🏗️ macOS Mojave / 10.14 (Release)
    if: (branch = master AND NOT type = pull_request) OR tag IS present
    os: osx
    osx_image: xcode11
    env: NAME=Mojave
    cache:
      ccache: true
      directories:
      - $HOME/Library/Caches/Homebrew
    addons:
      homebrew:
        packages:
        - ccache
        - protobuf
        - qt
        - xz
        update: true
    script: bash ./.ci/travis-compile.sh --server --package "$NAME" --release --zip
    before_cache:
    - brew cleanup


  #Windows
  #https://docs.travis-ci.com/user/reference/windows/
  - name: 🏗️ Windows Server 10 / 1803 (Debug)
    if: tag IS NOT present
    os: windows
    cache: true
    script: bash ./.ci/travis-compile.sh --server --install --debug

  - name: 🏗️ Windows Server 10 / 1803 (Release)
    if: (branch = master AND NOT type = pull_request) OR tag IS present
    os: windows
    env: NAME=win
    cache: true
    script: bash ./.ci/travis-compile.sh --server --package "$NAME" --release


  - stage: Dynamic Program Analysis 👨‍🔬
    #more emoji ideas: 👨‍⚕️ // 🧪🧬🔬 

    #add allowed-to-fail to make it run even if there is a problem with one of the builds?
    #debug? docker?
    name: 🔬 Unit Tests
    if: tag IS NOT present
    os: linux
    group: stable
    script: bash ./.ci/travis-compile.sh --server --test


  - stage: Deploy  👨‍✈️
    #more emoji ideas: 👨‍🚀 // 🚀🚢🛳️🚁🛫✈️ / 📦 

    name: 📦 flatpak (hosted @ Flathub)
    if: (branch = master AND NOT type = pull_request) AND tag IS present
    os: linux
    group: stable
    script: bash ./.ci/travis-deploy.sh --flatpak
# script --> flatpak @flathub
# send PR/commit change? to flathub repo: https://github.com/flathub/io.github.Cockatrice.cockatrice

  - name: 📦 GitHub Releases
    if: (branch = master AND NOT type = pull_request) AND tag IS present
    os: linux
    group: stable
    script: bash ./.ci/travis-deploy.sh --github
# only check if release is created and files got deployed and uploaded correctly from former builds
# test downloads

  - name: 📦 GitHub Pages
    if: (branch = master AND NOT type = pull_request) AND tag IS present
    os: linux
    group: stable
    script: bash ./.ci/travis-deploy.sh --github
# send PR/commit change? with updated announcement + link to GH Releases

#  - stage: Cleanup
#    #more emoji ideas: 
#
# bump version number in cmake to next patch version at least. or have some other check at other destination which makes sure version is different than last release
#    name: After release tidy-up
#    if: (branch = master AND NOT type = pull_request) AND tag IS present
#    os: linux
#    group: stable
#    script: 



# former deploy section

# Builds for pull requests skip the deployment step altogether
#deploy:
# Deploy configuration for "beta" releases
#  - provider: releases
#    token:
#      secure: mLMF41q7xgOR1sjczsilEy7HQis2PkZCzhfOGbn/8FoOQnmmPOZjrsdhn06ZSl3SFsbfCLuClDYXAbFscQmdgjcGN5AmHV+JYfW650QEuQa/f4/lQFsVRtEqUA1O3FQ0OuRxdpCfJubZBdFVH8SbZ93GLC5zXJbkWQNq+xCX1fU=
#    name: "Cockatrice $TRAVIS_TAG"
#    release_notes: "Beta release of Cockatrice"
#    file_glob: true
#    file: "build/Cockatrice-*"
#    overwrite: true
#    draft: false
#    prerelease: true
#    on:
#      tags: true
#      repo: Cockatrice/Cockatrice
#      branch: master
#      condition: $TRAVIS_TAG =~ ([0-9]|[1-9][0-9])(\.([0-9]|[1-9][0-9])){2}-beta(\.([2-9]|[1-9][0-9]))?$     # regex to match semver naming convention for beta pre-releases

# Deploy configuration for "stable" releases
#  - provider: releases
#    token:
#      secure: mLMF41q7xgOR1sjczsilEy7HQis2PkZCzhfOGbn/8FoOQnmmPOZjrsdhn06ZSl3SFsbfCLuClDYXAbFscQmdgjcGN5AmHV+JYfW650QEuQa/f4/lQFsVRtEqUA1O3FQ0OuRxdpCfJubZBdFVH8SbZ93GLC5zXJbkWQNq+xCX1fU=
#    file_glob: true
#    file: "build/Cockatrice-*"
#    overwrite: true
#    draft: false
#    prerelease: false
#    on:
#      tags: true
#      repo: Cockatrice/Cockatrice
#      branch: master
#      condition: $TRAVIS_TAG =~ ([0-9]|[1-9][0-9])(\.([0-9]|[1-9][0-9])){2}$    # regex to match semver naming convention for stable full releases


notifications:
  email: false
  webhooks:
    urls:
    - https://webhooks.gitter.im/e/d94969c3b01b22cbdcb7
    on_success: change
    on_failure: change
    on_start: never
    on_cancel: change
    on_error: change


# Announcements of build image updates: https://docs.travis-ci.com/user/build-environment-updates/
# For precise versions of preinstalled tools on the VM, check “Build system information” in the build log!
# Official validator for ".travis.yml" config file: https://yaml.travis-ci.org (--> temporary: http://config.travis-ci.org/)
# Travis CI config documentation: https://docs.travis-ci.com/user/customizing-the-build
